// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoulmateSeeker.Data;

#nullable disable

namespace SoulmateSeeker.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230910225546_picChanged")]
    partial class picChanged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoulmateSeeker.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookingFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Greenbush",
                            Country = "Martinique",
                            Created = new DateTime(2020, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1956, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "female",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "liza",
                            LastActive = new DateTime(2020, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 41, 235, 233, 218, 191, 100, 179, 177, 1, 232, 180, 160, 52, 35, 211, 151, 124, 95, 55, 97, 230, 207, 137, 201, 63, 49, 0, 156, 188, 182, 70, 193, 233, 62, 236, 168, 185, 131, 47, 4, 166, 163, 33, 183, 169, 117, 177, 169, 152, 237, 125, 21, 185, 136, 143, 177, 167, 36, 96, 92, 102, 192, 167, 39 },
                            PasswordSalt = new byte[] { 112, 122, 159, 135, 45, 69, 96, 168, 123, 65, 62, 156, 230, 208, 68, 150, 222, 105, 233, 213, 145, 17, 185, 8, 49, 217, 162, 193, 126, 166, 135, 95, 238, 222, 176, 93, 153, 51, 12, 133, 135, 4, 184, 2, 247, 77, 131, 225, 166, 3, 4, 42, 3, 202, 23, 215, 111, 92, 204, 208, 160, 46, 33, 120, 29, 153, 91, 10, 34, 1, 168, 234, 95, 230, 18, 223, 232, 42, 105, 152, 32, 28, 3, 1, 146, 227, 253, 32, 17, 173, 130, 86, 188, 35, 9, 87, 25, 1, 42, 62, 15, 180, 233, 44, 201, 92, 169, 207, 146, 125, 89, 222, 52, 173, 54, 160, 120, 251, 1, 213, 113, 223, 33, 37, 47, 46, 214, 18 },
                            UserName = "liza"
                        },
                        new
                        {
                            Id = 2,
                            City = "Celeryville",
                            Country = "Grenada",
                            Created = new DateTime(2019, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1995, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "female",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "karen",
                            LastActive = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 177, 150, 84, 166, 109, 62, 81, 188, 184, 49, 173, 245, 44, 45, 8, 64, 224, 203, 159, 120, 110, 218, 179, 216, 169, 191, 228, 127, 254, 170, 138, 151, 149, 145, 14, 118, 96, 197, 152, 102, 17, 220, 137, 108, 114, 139, 91, 197, 143, 32, 92, 134, 50, 73, 65, 52, 208, 185, 111, 168, 171, 36, 145, 247 },
                            PasswordSalt = new byte[] { 41, 199, 154, 127, 159, 95, 95, 112, 65, 58, 218, 185, 32, 71, 51, 101, 169, 109, 121, 148, 120, 212, 180, 29, 222, 11, 177, 66, 207, 139, 220, 200, 125, 255, 96, 93, 107, 234, 21, 103, 118, 185, 162, 244, 52, 196, 48, 181, 186, 124, 199, 28, 70, 184, 73, 44, 202, 141, 251, 245, 144, 91, 152, 126, 253, 203, 22, 155, 139, 147, 231, 170, 104, 244, 78, 68, 16, 147, 222, 184, 10, 91, 37, 182, 64, 239, 186, 52, 73, 232, 92, 50, 122, 190, 16, 170, 89, 42, 166, 46, 196, 125, 158, 4, 165, 82, 190, 156, 212, 246, 204, 92, 150, 156, 252, 18, 69, 101, 131, 233, 26, 219, 77, 9, 90, 28, 254, 167 },
                            UserName = "karen"
                        },
                        new
                        {
                            Id = 3,
                            City = "Rosewood",
                            Country = "Svalbard and Jan Mayen Islands",
                            Created = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1959, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "female",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "margo",
                            LastActive = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 215, 2, 144, 171, 137, 72, 189, 175, 45, 188, 148, 12, 52, 227, 45, 94, 77, 217, 252, 64, 93, 202, 63, 127, 179, 186, 113, 207, 110, 161, 90, 114, 198, 144, 194, 217, 61, 22, 32, 100, 181, 218, 168, 193, 148, 224, 53, 138, 68, 113, 205, 136, 11, 215, 159, 196, 216, 35, 206, 175, 110, 191, 101, 181 },
                            PasswordSalt = new byte[] { 47, 64, 202, 86, 127, 82, 41, 39, 159, 101, 215, 34, 54, 51, 216, 186, 216, 85, 34, 40, 186, 251, 140, 151, 85, 209, 63, 163, 62, 66, 189, 12, 230, 85, 187, 73, 164, 175, 4, 76, 221, 243, 11, 109, 106, 55, 206, 130, 204, 90, 175, 147, 74, 36, 197, 86, 220, 213, 0, 110, 122, 102, 209, 112, 28, 194, 11, 13, 150, 51, 10, 172, 77, 66, 21, 50, 97, 237, 131, 216, 198, 14, 73, 232, 15, 99, 75, 4, 157, 186, 119, 37, 36, 218, 69, 234, 161, 104, 189, 239, 13, 213, 47, 52, 66, 38, 97, 150, 99, 234, 66, 225, 211, 5, 5, 166, 101, 182, 176, 247, 206, 180, 153, 222, 102, 169, 201, 41 },
                            UserName = "margo"
                        },
                        new
                        {
                            Id = 4,
                            City = "Orviston",
                            Country = "Zimbabwe",
                            Created = new DateTime(2019, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1988, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "female",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "lois",
                            LastActive = new DateTime(2020, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 221, 7, 156, 94, 240, 196, 17, 39, 14, 102, 175, 24, 60, 203, 148, 135, 177, 226, 129, 178, 77, 50, 123, 183, 15, 95, 252, 39, 74, 126, 188, 168, 129, 168, 119, 169, 251, 68, 116, 44, 105, 157, 10, 205, 232, 195, 35, 59, 183, 33, 180, 79, 171, 134, 36, 106, 216, 5, 213, 172, 16, 50, 137, 254 },
                            PasswordSalt = new byte[] { 175, 83, 188, 59, 231, 169, 185, 31, 39, 58, 246, 79, 92, 207, 184, 21, 178, 173, 5, 237, 19, 47, 59, 102, 207, 8, 63, 214, 17, 208, 194, 45, 153, 125, 3, 34, 103, 247, 195, 228, 2, 28, 151, 252, 192, 201, 7, 255, 223, 156, 92, 62, 99, 48, 33, 237, 95, 36, 22, 48, 37, 7, 43, 65, 231, 56, 8, 70, 130, 180, 35, 158, 194, 33, 3, 17, 138, 191, 141, 37, 135, 7, 21, 107, 140, 105, 230, 147, 72, 224, 99, 183, 125, 246, 11, 87, 166, 5, 157, 62, 4, 141, 185, 127, 42, 14, 133, 4, 134, 46, 149, 34, 77, 6, 248, 195, 181, 213, 220, 134, 56, 255, 196, 160, 156, 84, 113, 219 },
                            UserName = "lois"
                        },
                        new
                        {
                            Id = 5,
                            City = "Germanton",
                            Country = "Antigua and Barbuda",
                            Created = new DateTime(2019, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1956, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "female",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "ruthie",
                            LastActive = new DateTime(2020, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 130, 52, 34, 6, 241, 74, 51, 172, 32, 31, 11, 5, 114, 228, 134, 28, 33, 215, 185, 65, 247, 161, 118, 28, 119, 148, 116, 51, 223, 177, 68, 55, 160, 6, 0, 150, 213, 48, 234, 94, 143, 234, 60, 29, 223, 67, 239, 118, 195, 156, 253, 109, 245, 200, 161, 77, 186, 37, 121, 5, 160, 33, 132, 210 },
                            PasswordSalt = new byte[] { 38, 204, 171, 161, 90, 173, 95, 156, 108, 174, 28, 250, 198, 238, 182, 234, 255, 181, 131, 165, 249, 203, 33, 149, 250, 124, 165, 140, 28, 201, 157, 23, 156, 238, 101, 222, 149, 168, 205, 177, 82, 0, 116, 232, 157, 24, 243, 87, 192, 178, 107, 66, 187, 200, 140, 196, 121, 172, 63, 104, 131, 190, 121, 194, 66, 166, 145, 136, 156, 37, 132, 159, 79, 58, 138, 125, 17, 5, 209, 114, 232, 137, 79, 247, 120, 229, 149, 88, 64, 178, 194, 172, 202, 117, 80, 125, 71, 128, 66, 18, 136, 136, 96, 133, 34, 120, 232, 171, 92, 237, 132, 11, 232, 99, 223, 254, 225, 206, 204, 67, 20, 19, 235, 47, 108, 146, 47, 192 },
                            UserName = "ruthie"
                        },
                        new
                        {
                            Id = 6,
                            City = "Cliff",
                            Country = "British Indian Ocean Territory",
                            Created = new DateTime(2019, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1950, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "male",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "todd",
                            LastActive = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 10, 36, 9, 65, 238, 102, 38, 194, 151, 166, 196, 99, 245, 210, 199, 163, 229, 172, 72, 5, 32, 134, 249, 160, 43, 41, 193, 154, 28, 37, 148, 102, 127, 191, 4, 65, 185, 194, 10, 224, 170, 135, 78, 45, 140, 155, 129, 232, 188, 129, 44, 11, 132, 182, 194, 213, 109, 191, 107, 236, 76, 211, 40, 36 },
                            PasswordSalt = new byte[] { 204, 95, 106, 92, 225, 241, 19, 36, 230, 83, 241, 221, 226, 198, 26, 76, 250, 197, 33, 134, 1, 197, 147, 224, 133, 13, 248, 95, 253, 87, 116, 150, 142, 38, 10, 227, 78, 153, 176, 105, 17, 217, 72, 181, 6, 81, 76, 157, 111, 127, 163, 136, 88, 11, 91, 252, 217, 36, 138, 236, 204, 126, 200, 86, 254, 128, 22, 227, 205, 216, 91, 44, 12, 93, 76, 46, 179, 28, 21, 112, 212, 84, 44, 115, 252, 152, 24, 233, 12, 153, 10, 38, 126, 140, 204, 62, 73, 82, 79, 218, 255, 133, 195, 68, 9, 179, 0, 235, 6, 37, 68, 167, 105, 191, 80, 0, 94, 132, 37, 141, 20, 153, 67, 188, 23, 192, 61, 156 },
                            UserName = "todd"
                        },
                        new
                        {
                            Id = 7,
                            City = "Welda",
                            Country = "Christmas Island",
                            Created = new DateTime(2020, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1967, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "male",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "porter",
                            LastActive = new DateTime(2020, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 19, 98, 170, 67, 129, 93, 34, 248, 84, 184, 187, 195, 248, 135, 72, 108, 87, 201, 12, 103, 108, 104, 101, 105, 109, 154, 27, 153, 18, 99, 4, 33, 156, 2, 139, 235, 86, 241, 33, 247, 207, 148, 0, 111, 118, 28, 167, 111, 20, 141, 195, 238, 167, 149, 8, 232, 235, 192, 202, 250, 53, 3, 132, 22 },
                            PasswordSalt = new byte[] { 184, 16, 3, 203, 17, 111, 172, 176, 133, 246, 1, 204, 24, 186, 18, 47, 207, 85, 57, 36, 73, 165, 223, 111, 21, 254, 236, 25, 127, 250, 192, 173, 216, 115, 242, 188, 227, 127, 51, 229, 168, 17, 167, 208, 124, 153, 253, 204, 243, 53, 163, 33, 179, 139, 173, 70, 138, 31, 243, 15, 189, 214, 196, 83, 230, 5, 26, 192, 218, 12, 125, 192, 168, 103, 181, 146, 244, 156, 79, 157, 245, 141, 9, 159, 56, 119, 94, 127, 50, 202, 140, 130, 253, 193, 167, 222, 231, 83, 44, 161, 43, 148, 52, 196, 209, 219, 34, 171, 16, 100, 246, 27, 239, 169, 250, 36, 58, 72, 125, 117, 250, 24, 201, 133, 143, 164, 218, 138 },
                            UserName = "porter"
                        },
                        new
                        {
                            Id = 8,
                            City = "Calrence",
                            Country = "Burkina Faso",
                            Created = new DateTime(2019, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1990, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "male",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "mayo",
                            LastActive = new DateTime(2020, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 8, 254, 106, 12, 3, 16, 204, 83, 35, 208, 14, 74, 222, 222, 135, 66, 128, 102, 71, 121, 15, 165, 168, 27, 162, 232, 147, 190, 130, 172, 67, 115, 198, 58, 250, 241, 68, 175, 18, 144, 45, 100, 226, 52, 20, 10, 4, 40, 85, 39, 225, 149, 77, 63, 206, 216, 47, 27, 184, 98, 170, 251, 76, 171 },
                            PasswordSalt = new byte[] { 217, 51, 150, 127, 68, 167, 55, 115, 29, 76, 201, 223, 173, 239, 202, 163, 227, 18, 102, 246, 7, 18, 166, 97, 114, 57, 221, 114, 235, 3, 58, 29, 51, 125, 99, 214, 137, 209, 41, 55, 224, 54, 81, 23, 166, 13, 251, 75, 235, 11, 45, 132, 12, 58, 116, 184, 119, 78, 249, 8, 161, 47, 12, 216, 22, 154, 36, 139, 134, 251, 69, 25, 53, 165, 66, 199, 98, 35, 207, 11, 131, 91, 117, 174, 67, 27, 55, 149, 199, 109, 40, 131, 8, 25, 125, 23, 188, 120, 45, 78, 1, 168, 192, 26, 216, 115, 150, 80, 143, 45, 72, 206, 101, 227, 147, 80, 218, 95, 245, 107, 94, 34, 6, 90, 8, 88, 91, 150 },
                            UserName = "mayo"
                        },
                        new
                        {
                            Id = 9,
                            City = "Herald",
                            Country = "Poland",
                            Created = new DateTime(2019, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1952, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "male",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "skinner",
                            LastActive = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 63, 35, 187, 31, 0, 105, 89, 138, 222, 33, 255, 44, 99, 188, 79, 153, 163, 234, 134, 22, 0, 97, 41, 66, 187, 49, 186, 206, 240, 32, 188, 153, 211, 71, 239, 161, 73, 189, 78, 174, 31, 95, 46, 142, 225, 109, 64, 166, 75, 33, 190, 217, 245, 136, 10, 172, 218, 40, 163, 127, 137, 198, 10, 210 },
                            PasswordSalt = new byte[] { 75, 151, 140, 95, 137, 13, 123, 119, 172, 195, 163, 62, 3, 248, 156, 230, 155, 215, 58, 3, 114, 204, 31, 167, 202, 193, 63, 115, 103, 65, 11, 23, 123, 60, 35, 50, 72, 211, 22, 213, 228, 189, 201, 133, 190, 32, 135, 122, 205, 224, 127, 46, 157, 156, 39, 105, 80, 119, 132, 128, 191, 40, 37, 168, 59, 252, 189, 102, 44, 178, 65, 194, 140, 48, 83, 170, 102, 193, 197, 32, 179, 173, 192, 68, 181, 160, 121, 88, 55, 75, 163, 165, 41, 158, 122, 185, 7, 224, 31, 245, 60, 180, 48, 141, 47, 32, 141, 114, 132, 107, 41, 242, 119, 49, 70, 20, 218, 156, 236, 7, 208, 168, 38, 206, 154, 110, 115, 116 },
                            UserName = "skinner"
                        },
                        new
                        {
                            Id = 10,
                            City = "Lupton",
                            Country = "Luxembourg",
                            Created = new DateTime(2019, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1978, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "male",
                            Interests = "I am interesed in blablabla",
                            Introduction = "IntroductionBlablabla",
                            KnownAs = "davis",
                            LastActive = new DateTime(2020, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LookingFor = "LookingForBlablabla",
                            PasswordHash = new byte[] { 49, 74, 204, 41, 183, 129, 106, 201, 210, 24, 48, 244, 183, 115, 186, 98, 49, 206, 151, 93, 147, 192, 155, 234, 179, 15, 53, 255, 122, 142, 12, 39, 138, 203, 14, 133, 172, 69, 247, 194, 191, 138, 103, 50, 210, 166, 73, 25, 177, 72, 26, 41, 216, 80, 56, 7, 115, 160, 241, 219, 7, 70, 150, 91 },
                            PasswordSalt = new byte[] { 164, 170, 201, 9, 86, 219, 191, 14, 208, 98, 209, 43, 148, 111, 77, 48, 227, 39, 254, 241, 94, 1, 212, 211, 206, 85, 226, 191, 36, 134, 19, 139, 90, 1, 116, 229, 113, 104, 110, 179, 232, 113, 169, 124, 71, 10, 101, 130, 115, 137, 135, 41, 50, 134, 3, 51, 112, 107, 135, 238, 253, 11, 129, 38, 50, 46, 42, 49, 253, 141, 24, 76, 187, 11, 188, 81, 238, 178, 5, 251, 80, 138, 224, 14, 80, 164, 106, 226, 74, 244, 141, 26, 85, 129, 61, 228, 116, 223, 14, 138, 225, 92, 222, 214, 61, 193, 132, 85, 209, 59, 9, 136, 81, 46, 254, 128, 191, 52, 43, 232, 184, 152, 159, 185, 110, 144, 62, 227 },
                            UserName = "davis"
                        });
                });

            modelBuilder.Entity("SoulmateSeeker.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/women/54.jpg"
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/women/50.jpg"
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/women/14.jpg"
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/women/11.jpg"
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/women/84.jpg"
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/90.jpg"
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/87.jpg"
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/57.jpg"
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/11.jpg"
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            IsMain = true,
                            Url = "https://randomuser.me/api/portraits/men/93.jpg"
                        });
                });

            modelBuilder.Entity("SoulmateSeeker.Entities.Photo", b =>
                {
                    b.HasOne("SoulmateSeeker.Entities.AppUser", "AppUser")
                        .WithMany("Photos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("SoulmateSeeker.Entities.AppUser", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
